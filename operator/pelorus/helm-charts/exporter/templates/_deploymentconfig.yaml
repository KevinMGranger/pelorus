{{- define "exporters.deploymentconfig" }}
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    application: {{ .Release.Name }}
  name: {{ .Release.Name }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app.kubernetes.io/name: {{ .Release.Name }}
    app: {{ .Release.Name }}
    deploymentconfig: {{ .Release.Name }}
  strategy:
    type: Rolling
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}
        app: {{ .Release.Name }}
        deploymentconfig: {{ .Release.Name }}
        application: {{ .Release.Name }}
        pelorus.konveyor.io/exporter-type: {{ .exporter_type | default "generic-exporter" }}
    spec:
      serviceAccount: pelorus-exporter
      volumes:
        {{- range $config := .custom_certs }}
        - name: custom-cert-volume-{{$config.map_name}}
          configMap:
            name: {{ $config.map_name }}
        {{- end }}
      containers:
        - name: {{ .Release.Name }}
          imagePullPolicy: Always

          volumeMounts:
            {{- range $config := .custom_certs }}
            - name: custom-cert-volume-{{$config.map_name}}
              mountPath: /etc/pelorus/custom_certs/{{$config.map_name}}
            {{- end }}

          envFrom:
            {{- range .env_from_configmaps | default (list "default-pelorus-config" "default-deploytime-config") }}
            - configMapRef:
                name: {{ . }}
            {{- end }}

            {{- range .env_from_secrets }}
            - secretRef:
                name: {{ . }}
            {{- end}}
          env:
            {{- if .exporter_type }}
            - name: APP_FILE
              value: {{ .exporter_type }}/app.py
            {{- end }}

            {{- if and (not .source_ref) (not .source_url) }}
            - name: PELORUS_IMAGE_TAG
              value: {{ .Release.Name }}:{{ .image_tag | default "stable" }}
            {{- end }}

            {{- if .extraEnv }}
            {{- toYaml .extraEnv | nindent 12}}
            {{- end }}

            {{- if .logLevel }}
            LOG_LEVEL: {{ .logLevel }}
            {{- end }}

            {{- if .appLabel }}
            APP_LABEL: {{ .appLabel }}
            {{- end }}

            {{- if .prodLabel }}
            PROD_LABEL: {{ .prodLabel }}
            {{- end }}

            {{- if .namespaces }}
            NAMESPACES: {{ join ',' .namespaces }}
            {{- end }}
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - {{ .Release.Name }}
      from:
        kind: ImageStreamTag
        {{- if or .source_ref .source_url }}
        name: {{ .Release.Name }}:latest
        {{- else }}
        name: {{ .Release.Name }}:{{ .image_tag | default "stable" }}
        {{- end }}
    type: ImageChange
{{- end }}
